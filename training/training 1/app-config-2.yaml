kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config-rhdh
  namespace: demo-project
data:
  app-config-rhdh.yaml: |
    # signInPage: github   
    signInPage: oidc
    app:
      title: My Red Hat Developer Hub Instance
      baseUrl: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
    permission:
      enabled: true
      rbac:
        policies-csv-file: ./rbac-policy.csv
        conditionalPoliciesFile: ./conditional-policy.yaml
        policyFileReload: true # reload changed config without rebooting developer hub
        admin:
          users:
            - name: user:default/user1
    backend:
      reading:
        allow:
          - host: raw.githubusercontent.com
          - host: github.com
      auth:
        keys:
          - secret: ${BACKEND_SECRET}
      baseUrl: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
      cors:
        origin: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
    integrations:
      github:
        - host: github.com
          token: ${RHDH_GITHUB_INTEGRATION_PERSONAL_ACCESS_TOKEN}
          apps:
            - appId: ${RHDH_GITHUB_INTEGRATION_APP_ID}
              clientId: ${RHDH_GITHUB_INTEGRATION_APP_CLIENT_ID}
              clientSecret: ${RHDH_GITHUB_INTEGRATION_APP_CLIENT_SECRET}
              webhookUrl: none
              webhookSecret: none
              privateKey: ${RHDH_GITHUB_INTEGRATION_APP_PRIVATE_KEY}
    catalog:
      providers:
        github:
          # the provider ID can be any camelCase string
          providerId:
            organization: 'Developer-Hub-Demo-Organization' # string
            catalogPath: '/catalog-info.yaml' # string
            filters:
              branch: 'master' # string
              repository: '.*' # Regex
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { minutes: 1 }
              # supports ISO duration, "human duration" as used in code
              timeout: { minutes: 1 }
              initialDelay: { seconds: 15 }
            # githubOrg: # For user import
            # id: githubborg-developer-hub-demo-organization
            # githubUrl: https://github.com # 'https://' is required!
            # orgs: [ 'Developer-Hub-Demo-Organization' ]
            # schedule: # optional; same options as in TaskScheduleDefinition
            # # supports cron, ISO duration, "human duration" as used in code
            # frequency: { minutes: 1 }
            # # supports ISO duration, "human duration" as used in code
            # timeout: { minutes: 1 }
            # initialDelay: { seconds: 15 }
    auth:
      environment: default
      session:
        secret: ${BACKEND_SECRET}
    #  providers:
    #     github:
    #       default:
    #         clientId: ${RHDH_GITHUB_INTEGRATION_APP_CLIENT_ID}
    #         clientSecret: ${RHDH_GITHUB_INTEGRATION_APP_CLIENT_SECRET}
    
